global
    maxconn 256
    lua-load /usr/local/etc/haproxy/acme-http01-webroot.lua
    chroot /jail
    ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:!aNULL;
    tune.ssl.default-dh-param 4096

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option http-server-close
    option forwardfor

frontend http
    bind :80
    mode http
    acl url_acme_http01 path_beg /.well-known/acme-challenge/
    http-request use-service lua.acme-http01 if METH_GET url_acme_http01

    # redirect to remove www. prefix and switch to https
    redirect prefix http://nothingsbland.com code 301 if { hdr(host) -i www.nothingsbland.com }
    redirect prefix http://tryhard.tv code 301 if { hdr(host) -i www.tryhard.tv }

    # just switch to https for supported domains
    redirect scheme https if { hdr(host) -i nothingsbland.com } !{ ssl_fc }
    redirect scheme https if { hdr(host) -i tryhard.tv } !{ ssl_fc }

frontend https
    bind *:443 ssl crt /usr/local/etc/haproxy/certs/ no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11
    rspadd Strict-Transport-Security:\ max-age=15768000

    redirect prefix https://nothingsbland.com code 301 if { hdr(host) -i www.nothingsbland.com }
    redirect prefix https://tryhard.tv code 301 if { hdr(host) -i www.tryhard.tv }

    # Define hosts
    acl host_nothingsbland hdr(host) -i nothingsbland.com   # nothingsbland.com
    acl host_plex hdr(host) -i tryhard.tv                   # tryhard.tv

    # Route to proper backend based on domain.
    use_backend nothingsbland_cluster if host_nothingsbland
    use_backend plex_cluster if host_plex

backend nothingsbland_cluster
    balance roundrobin   
    option forceclose
    server node1 earthshaker.shawshank:8081 # nginx-nothingsbland.tryhard:8081
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend plex_cluster
    balance leastconn   
    option forceclose
    server node1 tiny.shawshank:32400 # External (different cluster)
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
