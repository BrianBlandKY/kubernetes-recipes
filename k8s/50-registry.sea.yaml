piVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: hebron
  name: registry
  annotations:
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/issuer: letsencrypt
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
  labels:
    app: registry
spec:
    - host: registry.sea
      http:
        paths:
          - backend:
              serviceName: registry
              servicePort: 80
            path: /
---
apiVersion: v1
kind: Service
metadata:
  namespace: hebron
  labels:
    app: registry
  name: registry
spec:
  selector:
    app: registry
  ports:
    - port: 80
      protocol: TCP
      targetPort: 5000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry
  namespace: hebron
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: hebron
  labels:
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      hostname: registry.sea
      nodeSelector:
        kubernetes.io/hostname: black-pearl.sea
      containers:
      - name: registry
        image: hebron-registry:0.1.0
        imagePullPolicy: IfNotPresent
        env:
        ports:
          - containerPort: 5000
            protocol: TCP
        resources:
         requests:
           memory: "500M"      
           cpu: "100m"        
         limits:               
           memory: "500M"      
           cpu: "100m"         
        volumeMounts:
        - name: data
          mountPath: /var/lib/registry
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: registry